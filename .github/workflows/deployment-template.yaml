name: Deploy with OpenTofu

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      image_tag:
        required: true
        type: string
      registry_name:
        required: true
        type: string
      image_name:
        required: true
        type: string
      tf_dir:
        required: true
        type: string

jobs:
  deploy:
    name: Deploy to ${{ inputs.environment }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup OpenTofu
        uses: opentofu/setup-opentofu@v1
        with:
          tofu_version: 1.8.3

      - name: Parse Azure credentials
        run: |
          echo "ARM_CLIENT_ID=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r '.clientId')" >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r '.clientSecret')" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r '.tenantId')" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r '.subscriptionId')" >> $GITHUB_ENV

      - name: Init & Apply
        run: |
          cd ${{ inputs.tf_dir }}

          tofu init -backend-config="./environments/${{ inputs.environment }}/backend.tfbackend" -input=false

          tofu apply -var-file="./environments/${{ inputs.environment }}/terraform.tfvars" -auto-approve -input=false \
            -var "container_registry_login_server=${{ inputs.registry_name }}" \
            -var "docker_image=${{ inputs.image_name }}" \
            -var "docker_tag=${{ inputs.image_tag }}"

          echo "HOSTNAME=$(tofu output -raw webapp_url)" >> $GITHUB_ENV

      - name: Run Python API tests
        env:
          HOSTNAME: ${{ env.HOSTNAME }}
        run: |
          echo $HOSTNAME
          python3 .github/workflows/scripts/tests.py

